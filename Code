class TTLabelEncoder(BaseEstimator, TransformerMixin):
    """Transform data frame columns with different categorical values
    in training and test data. TT stands for Train-Test.
    
    Pass individual data frame columns to the class instance."""
    
    def __init__(self):
        self.code_dict = None
        self.inv_code_dict = None
        self.max_code = None
        self.fitted = False
    
    def fit(self, df):
        self.code_dict = dict(zip(df.unique(),
                                  np.arange(len(df.unique()))))
        self.__max_code__()
        self.fitted = True
        return self
    
    def transform(self, df):
        self.check_fit_status()
        new_cat = set(df.unique()).difference(set(self.code_dict.keys()))
        if new_cat:
            new_codes = dict(zip(new_cat, 
                     np.arange(len(new_cat)) + self.max_code + 1))
            self.code_dict.update(new_codes)
            self.__max_code__()
        return df.map(self.code_dict)

    def fit_transform(self, df):
        if self.fitted == False:
            self.fit(df)
        df = self.transform(df)
        return df
    
    def inverse_transform(self, df):
        self.check_fit_status()
        self.inv_code_dict = {v:k for k, v in self.code_dict.items()}
        df = df.map(self.inv_code_dict)
        return df
    
    def check_fit_status(self):
        assert self.fitted == True, 'Fit the data before transforming.'
        return self
    
    def __max_code__(self):
        self.max_code = max(self.code_dict.values())
        return self
